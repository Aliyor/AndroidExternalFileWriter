{"name":"AndroidExternalFileWriter","tagline":"A helper class to write files in external android storage, along with it's demo application.","body":"AndroidExternalFileWriter\r\n=========================\r\n\r\nA helper class to write files in external android storage, along with it's demo application.\r\n\r\nClass is separately located at https://gist.github.com/PrashamTrivedi/6121924\r\n\r\nMaven Availibility\r\n==================\r\nThis repository is also available with maven, in [artyfactory ] (https://github.com/PrashamTrivedi/ArtyFactory)repository.\r\n\r\nTo add it in gradle file add this in your repositories.\r\n\r\n```gradle\r\n  maven {\r\n            url 'https://github.com/PrashamTrivedi/ArtyFactory/raw/master/snapshots'\r\n            //THIS IS TO GET SNAPSHOTS TO GET RELEASES (IN FUTURE) ADD/REPLACE IT WITH\r\n            //url 'https://github.com/PrashamTrivedi/ArtyFactory/raw/master/releases'\r\n  }\r\n```\r\nThe maven credentials (groupId:artifactId:verison) are\r\n\r\n```\r\ncom.phtrivedi.opensource:AppExternalLibrary:1.0.1-SNAPSHOT\r\n```\r\n\r\nHow does it work\r\n=========================\r\n1. Create AppExternalFileWriter object with passing context to it.\r\n\r\n2. Use writeDataToFile or writeDataToTimeStampedFile variants as per your wish.\r\n\r\n3. If you want to write a data where a file name should be a time stamp use writeDataToTimeStampedFile variants.\r\n\r\n4. If you want to create a subdirectory use suitable createSubDirectory variants.\r\n\r\n5. If anything is wrong with external storage, like storage not mounted, corrupt,  shared as mass storage, not enough space available, or even trying to create a library already created. The class will throw ExternalFileWriterException with the message stating what happened.\r\n\r\n6. If you want to write a data in external cache memory do following.\r\n    * Check the variants of all the methods where it asks for a boolean variable, if you pass true the file operation is done in external cache , otherwise it will be done in normal external memory.\r\n    * If have already created a directory in cache memory get it from createDirectory method, and pass this directory to any method where a parent is required. These methods work same regardless of parent is in external memory or in cache memory.\r\n\r\n7. Checks whether certain directory or file exists on certain location or not with help of isFileExists or isDirectoryExists variants\r\n\r\n8. Deletes entire directory with deleteDirectory method\r\n (Note : This method only cares about removing entire directory with its subcontents, if you want to check whether directory is empty or not and use some error message, I recommend to use File.delete() method.)\r\n\r\nDescription of Variants\r\n=========================\r\n\r\n1. writeDataToFile - Without parent directories\r\n```java\r\nwriteDataToFile(String fileName, byte[] data,boolean inCache);\r\nwriteDataToFile(String fileName, String data,boolean inCache);\r\n```\r\nWrites data to desired file in Application directory.\r\n          \r\n2. writeDataToFile - With parent directories\r\n```java\r\nwriteDataToFile(File parent, String fileName, byte[] data);\r\nwriteDataToFile(File parent, String fileName, String data);\r\n```\r\nWrites data to desired file in other directory.\r\n          \r\n3. writeDataToTimeStampedFile variants - Without parent directories\r\n```java\r\nwriteDataToTimeStampedFile(String extension, byte[] data,boolean inCache)\r\nwriteDataToTimeStampedFile(String extension, String data,boolean inCache)\r\n```\r\nWrites data to desired file with timestamp with extension in Application directory.\r\n          \r\n4. writeDataToTimeStampedFile variants - With parent directories\r\n```java\r\nwriteDataToTimeStampedFile(String extension, byte[] data)\r\nwriteDataToTimeStampedFile(String extension, String data)\r\n```\r\nWrites data to desired file with timestamp with extension in other directory.\r\n\r\n5. createSubDirectory variants\r\n```java\r\ncreateSubDirectory(File parent, String directoryName)\r\n```\r\nCreates subdirectory in any other directory\r\n```java\r\ncreateSubDirectory(String directoryName,boolean inCache)\r\n```\r\nCreates subdirectory in application directory.\r\n\r\n6. isDirectoryExists variants\r\n```java\r\nisDirectoryExists(String directoryName, boolean checkInCache)\r\n```\r\nChecks whether directory with given name exists in AppDirectory Or Cache directory\r\n```java\r\nisDirectoryExists(String directoryName, File parentDirectory)\r\n```\r\nChecks whether directory with given name exists in parentDirectory or not.\r\n\r\n7. isFileExists variants\r\n```java\r\nisFileExists(String fileName, boolean checkInCache)\r\n```\r\nChecks whether file with given name exists in AppDirectory\r\n```java\r\nisFileExists(String fileName, File parentDirectory)\r\n```\r\nCheck whether directory with given name exists in parentDirectory or not.\r\n\r\n8. Delete Directory\r\n```java\r\ndeleteDirectory(File directory)\r\n```\r\nDeletes given directory with all its subdirectories and its files.\r\n\r\nSome goodies\r\n=========================\r\n\r\n1. ```getAppDirectory()``` : File object of created app directory\r\n\r\n2. ```getExternalStorageDirectory()``` : File object of external storage directory\r\n\r\n3. ```getExternalCacheDirectory()``` : File object of external cache directory\r\n\r\nNote for Eclipse users\r\n======================\r\n1. There is another branch for you to check out, this branch is developed using android studio and you might face problem importing directly into eclipse.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}